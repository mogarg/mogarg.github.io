<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>distributed systems on Mohit Garg</title>
    <link>https://mogarg.github.io/tags/distributed-systems/</link>
    <description>Recent content in distributed systems on Mohit Garg</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 May 2020 16:13:10 -0400</lastBuildDate>
    
	<atom:link href="https://mogarg.github.io/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Rapid: Distributed Membership Service at Scale</title>
      <link>https://mogarg.github.io/blog/05-24-2020-rapid-membership/</link>
      <pubDate>Sun, 24 May 2020 16:13:10 -0400</pubDate>
      
      <guid>https://mogarg.github.io/blog/05-24-2020-rapid-membership/</guid>
      <description>This article presents a summary of the paper by Lalith Suresh, Dahlia Malkhi, Parikshit Gopalan, Ivan Porto Carreiro, and Zeeshan Lokhandwala, which appeared in USENIX Annual Technical Conference 2018. I also presented this paper in the Distributed Systems Reading Group, a weekly public paper reading group hosted by Prof Murat Debirmas.
This paper primarily about membership in distributed systems in the presence of gray failures. While crash faults are relatively easy to detect and fix, gray failures often go undetected or take a long time to localize and fix.</description>
    </item>
    
    <item>
      <title>Elpis</title>
      <link>https://mogarg.github.io/projects/creations/elpis/</link>
      <pubDate>Tue, 11 Sep 2018 12:41:05 -0500</pubDate>
      
      <guid>https://mogarg.github.io/projects/creations/elpis/</guid>
      <description>Thesis My thesis can be found here.
Motivation While internet services are designed and deployed with an assumption of perimeter less security at the application layer, most production distributed systems today are designed assuming a classical Crash Fault Tolerant (CFT) model. In realistic deployment scenarios, keeping track of all bridged networks such as smartphones, network printers, etc. is almost impossible. Hence, designing distributed systems without considering the possibility of an active adversary makes the system vulnerable from its core.</description>
    </item>
    
  </channel>
</rss>